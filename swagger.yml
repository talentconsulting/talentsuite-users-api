swagger: "2.0"
info:
  title: User service API
  description: This service contains the API for managing and authorising users
  version: 1.0.0
host: api.users.talentsuite.uk
schemes:
  - https
paths:
  /health:
    get:
      summary: Health endpoint which tests all integrations for connectivity.
      produces:
        - application/json
      responses:
        200:
          description: Information json returned
          schema:
            type: array
            items:
              $ref: "#/definitions/health"
      
  /info:
    get:
      summary: information endpoint.
      produces:
        - application/json
      responses:
        200:
          description: Information json returned
          schema:
            $ref: "#/definitions/info"

  /readiness:
    get:
      summary: Returns whether the service is ready
      produces:
        - application/json
      responses:
        200:
          description: OK

  /groups:
    get:
      summary: Return a list of groups supported by the system
      produces:
        - application/json
      responses:
        200:
          description: Updated
          schema:
            $ref: "#/definitions/usergroupListResponse"
  
  /users/{id}:
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: The user to fetch.
          type: string
          required: true
      responses:
        404:
          description: The user is not found
        200:
          description: OK
          schema:
            $ref: "#/definitions/userResponse"
    put:
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: The user to update.
          schema:
            $ref: "#/definitions/userResponse"
        - in: path
          name: id
          description: The id of the user to update
          type: string
          required: true
      responses:
        404:
          description: The report is not found
        200:
          description: Updated
          headers:
            location:
              description: location of the resource created
              type: string
              format: uri
        400:
          description: The report is already submitted
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: The id of the user to delete
          type: string
          required: true
      responses:
        404:
          description: The user is not found
        200:
          description: Deleted
  
  /users:
    get:
      summary: Return a paged view of users in normalised form
      produces:
        - application/json
      parameters:
        - in: query
          type: number
          name: page
          description: "page to get"
          required: false
          default: 1
        - in: query
          type: number
          name: pageSize
          description: "pagesize to return"
          required: false
        - in: query
          type: string
          name: userGroupId
          description: "group to filter on"
          required: false

      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/userListResponse"
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: The report to create.
          schema:
            $ref: "#/definitions/userRequest"
      responses:
        201:
          description: Created
          headers:
            location:
              description: location of the resource created
              type: string
              format: uri

definitions:
  info:
    type: object
    properties: 
      version:
        type: string
  
  health:
    type: object
    properties: 
      name: 
        type: string
      healthy:
        type: boolean

  userListResponse:
    type: object
    properties: 
      pageDetail:
        $ref: "#/definitions/pageInfo"
      reports:
        type: array
        items:
          $ref: "#/definitions/userResponse"

  usergroupListResponse:
    type: object
    properties: 
      pageDetail:
        $ref: "#/definitions/pageInfo"
      reports:
        type: array
        items:
          $ref: "#/definitions/usergroupResponse"

  userRequest:
    type: object
    properties: 
      firstname:
        type: string
      surname:
        type: string
      email:
        type: string
      usergroupId:
        type: string
  userResponse:
      allOf:
        - $ref: "#/definitions/userRequest"
      properties: 
        id:
          type: string

  usergroupResponse:
      properties: 
        id:
          type: string
        description:
          type: string
      
  pageInfo:
    type: object
    properties: 
      totalCount:
        type: number
      page: 
        type: number
      pageSize: 
        type: number
      first:
        type: boolean
      last:
        type: boolean